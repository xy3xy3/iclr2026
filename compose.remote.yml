name: iclr2026-remote

services:
  pgvector:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/pgvector/pgvector:pg18-bookworm
    container_name: iclr2026_pgvector
    restart: unless-stopped
    environment:
      POSTGRES_DB: iclr2026
      POSTGRES_USER: iclr
      POSTGRES_PASSWORD: iclrpass
    ports:
      - "5432:5432"
    volumes:
      - pg_data_remote:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iclr_net

  uvapp:
    build:
      context: .
      dockerfile: Dockerfile.uv
    image: iclr2026-uv:latest
    container_name: iclr2026_uv
    init: true
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      # DB connection envs for app use
      POSTGRES_DB: iclr2026
      POSTGRES_USER: iclr
      POSTGRES_PASSWORD: iclrpass
      POSTGRES_HOST: pgvector
      POSTGRES_PORT: "5432"
      # OpenAI config (passed through from host if set)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-}
      OPENAI_EMBED_MODEL: ${OPENAI_EMBED_MODEL:-}
      OPENAI_EMBED_DIM: ${OPENAI_EMBED_DIM:-1536}
    depends_on:
      pgvector:
        condition: service_healthy
    # Keep container running and provide uv inside
    command: ["bash", "-lc", "./scripts/serve_app.sh"]
    ports:
      - "8000:8000"  # for future FastAPI/Gradio if needed
    networks:
      - iclr_net

volumes:
  pg_data_remote:

networks:
  iclr_net:
    name: iclr2026_net
